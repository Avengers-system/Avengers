<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="admin">
 
 
  
 
 <!-- 교수 enable 0으로 변경 -->
 <update id="updatePrfsEnable" parameterType="java.lang.String">
 	UPDATE PROFESSOR
 	SET ENABLED = '0'
 	WHERE PRFS_NUM = #{prfs_num}
 </update>
 
 
 
 <!-- 학생검색+페이징 -->
	<select id="getStudEmpListCount" parameterType="com.avengers.db.dto.StudVO" resultType="int">
    	SELECT COUNT(*)  FROM STUDENT WHERE 1=1  
        <if test="searchFiled != null and searchFiled != ''">
            AND ${searchFiled} LIKE '%' || #{searchValue} || '%'
        </if>
	</select>

<!-- 2017.07.30 enabled 컬럼하나 추가 -->
	<select id="getStudEmpList" parameterType="com.avengers.db.dto.StudVO" resultType="com.avengers.db.dto.StudVO">
    SELECT 
        a.STUD_NUM, a.STUD_NM, a.STUD_ENG_NM, (SELECT D.DEPT_NM FROM DEPARTMENT D WHERE DEPT_NUM = a.STUD_DEPT )as STUD_DEPT, a.STUD_BIR, a.STUD_EMAIL, a.STUD_PW, a.STUD_GRD,
        a.STUD_REGNO, a.STUD_HP, a.STUD_ZIP, a.STUD_ADDR, a.STUD_GEN, a.STUD_QTR, a.STUD_SCHREG_CODE, a.STUD_PIC, a.STUD_ACT_NUM, a.STUD_BANK, 
        a.STUD_AH, a.ENABLED
    FROM (
        	SELECT ROWNUM rnum, s.*
        	FROM (
	            SELECT STUD_NUM, STUD_NM, STUD_ENG_NM, STUD_DEPT,STUD_BIR, STUD_EMAIL, STUD_PW, STUD_GRD, STUD_REGNO,
	            STUD_HP, STUD_ZIP, STUD_ADDR, STUD_GEN, STUD_QTR, STUD_SCHREG_CODE, STUD_PIC, STUD_ACT_NUM, STUD_BANK, STUD_AH ,ENABLED
	            FROM STUDENT
	            WHERE 1=1  
	            <if test="searchFiled != null and searchFiled != ''">
	                AND ${searchFiled} LIKE '%' || #{searchValue} || '%'
	            </if>
	            ORDER BY STUD_NUM DESC
        )s
    )a 
	
	WHERE rnum BETWEEN #{startRowNo} AND #{endRowNo}
	
	</select>


 <!-- 교수검색+페이징 -->
 	<select id="getPrfsEmpListCount" parameterType="com.avengers.db.dto.PrfsVO" resultType="int">
    	SELECT COUNT(*)  FROM PROFESSOR WHERE 1=1  
        <if test="searchFiled != null and searchFiled != ''">
            AND ${searchFiled} LIKE '%' || #{searchValue} || '%'
        </if>
	</select>

<!-- 삭제 시 ENABLED 0인 교수 제외하고 출력 -->
	<select id="getPrfsEmpList" parameterType="com.avengers.db.dto.PrfsVO" resultType="com.avengers.db.dto.PrfsVO">
    
    SELECT 
        a.PRFS_NUM, a.PRFS_NM, a.PRFS_ENG_NM, a.PRFS_BIR, a.PRFS_EMAIL, a.PRFS_PW, a.PRFS_REGNO,
        a.PRFS_GEN, a.PRFS_PIC, a.PRFS_ACT_NUM, a.PRFS_BANK, a.PRFS_AH, a.PRFS_ADDR, a.PRFS_ZIP, 
        a.PRFS_TEL, a.PRFS_HP, (SELECT D.DEPT_NM FROM DEPARTMENT D WHERE DEPT_NUM = a.PRFS_DEPT )as PRFS_DEPT, a.ENABLED
    FROM (
        	SELECT ROWNUM rnum, s.*
        	FROM (
	            SELECT PRFS_NUM, PRFS_NM, PRFS_ENG_NM, PRFS_BIR, PRFS_EMAIL, PRFS_PW, PRFS_REGNO, PRFS_GEN,
	            PRFS_PIC, PRFS_ACT_NUM, PRFS_BANK, PRFS_AH, PRFS_ADDR, PRFS_ZIP, PRFS_TEL, PRFS_HP,
	             PRFS_DEPT,ENABLED
	            FROM PROFESSOR
	            WHERE 1=1  
	            <if test="searchFiled != null and searchFiled != ''">
	                AND ${searchFiled} LIKE '%' || #{searchValue} || '%'
	            </if>
	            ORDER BY PRFS_NUM DESC
        )s
    )a 
	
	WHERE rnum BETWEEN #{startRowNo} AND #{endRowNo}
	</select>
	
 
	<!-- 총 학생 수  -->
	<select id="selectCountStudent" resultType="java.lang.Integer">
	select count(*)
	from student
	</select>

	<!-- 학생페이징 -->
		<select id="selectStudentList" resultType="com.avengers.db.dto.StudVO" parameterType="com.avengers.db.dto.StudVO">
		      SELECT ROWNUM , B.*
		      FROM(
		         SELECT ROWNUM RNUM, A.*
		         FROM(
		            SELECT * FROM STUDENT
		            ORDER BY STUD_NUM DESC
		            ) A
		         ) B
		      <![CDATA[
		      WHERE RNUM >= #{startRow} AND RNUM <= #{endRow}
		      ]]>
		      
		   </select>
		 
	

	<!-- 학생검색 -->

	<select id="selectSearchList" parameterType="map" resultType="com.avengers.db.dto.StudVO">
		select * 
		from student
		where 1=1
		<if test="searchFiled != null">
			AND ${searchFiled} like '%'||#{searchValue}||'%'
		</if>
		order by stud_num desc
	</select>

	<select id="selectStudentList1" parameterType="map" resultType="com.avengers.db.dto.StudVO">
		select * from student
		where 1=1
		and STUD_DEPT like '%'||#{stud_dept}||'%'	
		and STUD_NM like '%'||#{stud_nm}||'%'
		order by STUD_NUM DESC	
	</select>


	<select id="selectStudCount" parameterType="map" resultType="java.lang.Integer">
	
	SELECT COUNT(*)
	FROM STUDENT
	WHERE 1=1
	</select>
<!-- 	<if test="#{stud_dept}!=null"> -->
<!-- 	AND STUD_DEPT LIKE '%'||#{stud_dept}||'%' -->
<!-- 	</if> -->
<!-- 	<if test="#{value}!=null">  -->
<!-- 	AND STUD_NM LIKE '%'||#{value}||'%' -->
<!-- 	</if>      -->

 

	<!-- 학생수정 -->
	<update id="updateStudent" parameterType="map">
	update student
	set 
	STUD_NM = #{stud_nm },
	STUD_ENG_NM= #{stud_eng_nm jdbcType=VARCHAR}, 
	STUD_BIR= #{stud_bir jdbcType=DATE},
	STUD_EMAIL= #{stud_email jdbcType=VARCHAR},
	STUD_PW= #{stud_pw jdbcType=VARCHAR},
	STUD_GRD= #{stud_grd jdbcType=CHAR},
	STUD_REGNO= #{stud_regno jdbcType=VARCHAR},
	STUD_GEN= #{stud_gen jdbcType=CHAR},
	STUD_QTR= #{stud_qtr jdbcType=CHAR},
	STUD_SCHREG_CODE= #{stud_schreg_code jdbcType=VARCHAR},
	<if test="stud_pic != null">
           STUD_PIC= #{stud_pic jdbcType=VARCHAR},
    </if>
	STUD_ACT_NUM= #{stud_act_num jdbcType=VARCHAR},
	STUD_BANK= #{stud_bank jdbcType=VARCHAR},
	STUD_AH= #{stud_ah jdbcType=VARCHAR},
	STUD_ADDR= #{stud_addr jdbcType=VARCHAR},
	STUD_ZIP= #{stud_zip jdbcType=VARCHAR},
	STUD_TEL= #{stud_tel jdbcType=VARCHAR},
	STUD_HP= #{stud_hp jdbcType=VARCHAR},
	STUD_DEPT= #{stud_dept jdbcType=VARCHAR},
	STUD_GUAD_NM= #{stud_guad_nm jdbcType=VARCHAR},
	STUD_GUAD_REL= #{stud_guad_rel jdbcType=VARCHAR},
	STUD_GUAD_HP= #{stud_guad_hp jdbcType=VARCHAR},
	STUD_MAX_CRD= #{stud_max_crd}	
	where STUD_NUM = #{stud_num}
	
	</update>

	<!-- 학과검색 -->
   <select id="selectDepList">
   SELECT * 
   FROM DEPARTMENT
   </select>

   <!-- 학생삭제 (security만 변경)-->
   <update id="deleteStudent" parameterType="java.lang.String">
   UPDATE SECURITY
      SET ENABLED = '0'
      WHERE ID = #{stud_num jdbcType=VARCHAR}
   </update>
   <!-- 2017.07.30 학생삭제 -->
   <update id="deleteStudentEnabled" parameterType="java.lang.String">
   UPDATE STUDENT
      SET ENABLED = '2',STUD_SCHREG_CODE = '제적'
      WHERE STUD_NUM = #{stud_num jdbcType=VARCHAR}
   </update>


   <!-- 교수삭제 (security만 변경)-->
   <update id="deleteProfessor" parameterType="java.lang.String">
   UPDATE SECURITY
   SET ENABLED = '0'
   WHERE ID = #{prfs_num jdbcType=VARCHAR}
   </update>

   <!-- id의 경우에는 Mapper.java에 동일하게 사용해야된다. -->
   <select id="selectAdmin" parameterType="com.avengers.db.dto.AdminVO" resultType="com.avengers.db.dto.AdminVO">
      SELECT ADMIN_PIC,
            ADMIN_ID,
            ADMIN_NM,
            ADMIN_ENG_NM,
            ADMIN_REGNO,
            ADMIN_BIR,
            ADMIN_EMAIL,
            ADMIN_TEL,
            ADMIN_HP,
            ADMIN_POST,
            ADMIN_BANK,
            ADMIN_ACT_NUM,
            ADMIN_AH,
            ADMIN_ADDR,
            ADMIN_ZIP,
            ADMIN_PW,
            ADMIN_GEN
      FROM ADMIN
      WHERE ADMIN_ID = #{admin_id}
   </select>
   
   <update id="updateAdmin" parameterType="com.avengers.db.dto.AdminVO">
      UPDATE ADMIN
      SET 
         ADMIN_ID= #{admin_id},
         ADMIN_PW = #{admin_pw},
         ADMIN_NM = #{admin_nm},
         <if test="admin_pic != null">
            ADMIN_PIC=#{admin_pic},
         </if>
         ADMIN_BIR=TO_DATE(#{admin_bir},'YYYY-MM-DD HH24:MI:SS'),
         ADMIN_POST = #{admin_post},
         ADMIN_ENG_NM = #{admin_eng_nm},
         ADMIN_EMAIL = #{admin_email},         
         ADMIN_TEL = #{admin_tel},
         ADMIN_HP = #{admin_hp},
         ADMIN_ADDR = #{admin_addr},
         ADMIN_ZIP = #{admin_zip},
         ADMIN_BANK = #{admin_bank},
         ADMIN_ACT_NUM = #{admin_act_num},
         ADMIN_AH = #{admin_ah}
      WHERE ADMIN_ID=#{admin_id}   
   </update>
   

   <!-- id의 경우에는 Mapper.java에 동일하게 사용해야된다. -->
   <select id="getAdminInfo" resultType="com.avengers.db.dto.AdminVO" parameterType="java.lang.String">
      SELECT * FROM ADMIN WHERE ADMIN_ID = #{adminId}
   </select>
   
<!--    <select id="getPersonScheduleInfo" resultType="com.avengers.db.dto.PerschdVO" parameterType="string"> -->
<!--       SELECT * FROM PERSCHD WHERE PERSCHD_WRITER = #{adminId} -->
<!--    </select> -->
   <select id="getPersonScheduleInfo" resultType="com.avengers.db.dto.PerschdVO" parameterType="java.lang.String">
      SELECT * FROM PERSCHD WHERE PERSCHD_WRITER = #{adminId}
   </select>
      
   <select id="getProfNum" resultType="java.lang.String" >
      select '2017'||lpad(prfs_seq.currval,3,0 ) 
      from dual
   </select>
   
   <insert id="insertProfessor"  parameterType="com.avengers.db.dto.PrfsVO">
      INSERT INTO PROFESSOR(
            PRFS_NUM,
            PRFS_NM,
            PRFS_ENG_NM,
            PRFS_BIR,
            PRFS_EMAIL,
            PRFS_PW,
            PRFS_REGNO,
            PRFS_GEN,
            PRFS_PIC,
            PRFS_ACT_NUM,
            PRFS_BANK,
            PRFS_AH,
            PRFS_ADDR,
            PRFS_ZIP,
            PRFS_TEL,
            PRFS_HP,
            PRFS_DEPT,
            ENABLED,
            AUTHORITY
         ) VALUES (
            '2017'|| lpad(prfs_seq.nextval,3,0 ),
            #{prfs_nm},
            #{prfs_eng_nm},
            #{prfs_bir},
            #{prfs_email},
            #{prfs_pw},
            #{prfs_regno},
            #{prfs_gen},
            #{prfs_pic},
            #{prfs_act_num},
            #{prfs_bank},
            #{prfs_ah},
            #{prfs_addr},
            #{prfs_zip},
            #{prfs_tel},
            #{prfs_hp},
            #{prfs_dept},
            '1',
            'ROLE_PROF' 
         )    
   </insert>
   
   <select id="prfsNumCurr" resultType="String">
      SELECT  '2017'|| lpad(prfs_seq.currval,3,0 )
      FROM DUAL
   </select>
      <insert id="insertSecurity" parameterType="com.avengers.db.dto.PrfsVO">
   INSERT INTO SECURITY
         (
            ID,
            PWD,
            ENABLED,
            AUTHORITY
         )
      VALUES 
         (
            #{prfs_num},
            #{prfs_pw},
            '1',
            'ROLE_PROF' 
         )
   </insert>
   
   
   
   <!-- 학생등록 쿼리 -->
   <insert id="insertStudent" parameterType="com.avengers.db.dto.StudVO">
   INSERT INTO STUDENT(
	            STUD_NUM,
	            STUD_NM,
	            STUD_ENG_NM,
	            STUD_BIR,
	            STUD_EMAIL,
	            STUD_PW,
	            STUD_GRD,
	            STUD_REGNO,
	            STUD_GEN,
	            STUD_QTR,
	            STUD_SCHREG_CODE,
	            STUD_PIC,
	            STUD_ACT_NUM,
	            STUD_BANK,
	            STUD_AH,
	            STUD_ADDR,
	            STUD_ZIP,
	            STUD_TEL,
	            STUD_HP,
	            STUD_DEPT,
	            STUD_GUAD_NM,
	            STUD_GUAD_REL,
	            STUD_GUAD_HP,
	            ENABLED,
	            AUTHORITY,
	            STUD_MAX_CRD
  			 ) VALUES (
  			        '2017'||lpad(stud_seq.nextval,3,0),
			         #{stud_nm},   
			         #{stud_eng_nm},   
			         #{stud_bir},   
			         #{stud_email},   
			         #{stud_pw},   
			         #{stud_grd},   
			         #{stud_regno},   
			         #{stud_gen},   
			         #{stud_qtr},   
			         #{stud_schreg_code jdbcType=VARCHAR},   
			         #{stud_pic jdbcType=VARCHAR},   
			         #{stud_act_num jdbcType=VARCHAR},   
			         #{stud_bank jdbcType=VARCHAR},   
			         #{stud_ah jdbcType=VARCHAR},   
			         #{stud_addr jdbcType=VARCHAR},   
			         #{stud_zip jdbcType=VARCHAR},   
			         #{stud_tel jdbcType=VARCHAR},   
			         #{stud_hp jdbcType=VARCHAR},   
			         #{stud_dept jdbcType=VARCHAR},   
			         #{stud_guad_nm jdbcType=VARCHAR},   
			         #{stud_guad_rel},   
			         #{stud_guad_hp jdbcType=VARCHAR},   
			         '1',
			         'ROLE_STUD',   
			         #{stud_max_crd}   
      )
   
   </insert>
   
   
   
   <!-- 등록한학생번호찾기 -->
   
   <select id="studNumCurr" resultType="String">
   SELECT '2017'|| lpad(stud_seq.currval,3,0 )
      FROM DUAL
   </select>
   
   
   <!-- 학생 시큐리티 등록 -->
   <insert id="insertStudSecurity" parameterType="com.avengers.db.dto.StudVO">
   INSERT INTO SECURITY
         (
            ID,
            PWD,
            ENABLED,
            AUTHORITY
         )
      VALUES 
         (
            #{stud_num},
            #{stud_pw},
            '1',
            'ROLE_STUD' 
         )
   </insert>
   
   
   <select id="findInfo" parameterType="com.avengers.db.dto.AdminVO" resultType="com.avengers.db.dto.AdminVO">
	
	SELECT 	ADMIN_ID 
	FROM ADMIN 
	WHERE ADMIN_EMAIL=#{admin_email}
	<if test="admin_nm != null">
	AND ADMIN_NM=#{admin_nm}
	</if>
	<if test="admin_id != null">
	AND ADMIN_ID=#{admin_id}
	</if>
	
	</select> 
	
	<update id="updatePwd" parameterType="com.avengers.db.dto.AdminVO">
	UPDATE ADMIN 
	SET ADMIN_PW = #{admin_pw}
	WHERE  ADMIN_ID = #{admin_id} AND ADMIN_EMAIL = #{admin_email}
	</update> 
</mapper>
