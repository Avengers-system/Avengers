<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->	
	
	<annotation-driven />
	<view-controller view-name="common/commonMain" path="/main"/>
	<view-controller view-name="common/accessDenied" path="/accessDenied"/>
	<view-controller view-name="common/commonLogin" path="/login"/>
	<view-controller view-name="common/logout" path="/logout"/>
	<view-controller view-name="common/commonDuplicate" path="/login_duplicate"/>
	<view-controller view-name="common/forgotUsername" path="/forgotUsername"/>
	<view-controller view-name="common/forgotPassword" path="/forgotPassword"/>
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->

	<resources mapping="/resources/**" location="/resources/" />

	 
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0"/>
	</beans:bean>
	<beans:bean id="pagePDFView" class="com.avengers.student.admissionApplication.view.PagePDFView"/>
	<beans:bean id="download" class="com.avengers.db.dto.DownloadView"/>
	
	<context:component-scan base-package="com.avengers" />
	<!-- 타일즈를 위한 TilesViewResolver, TilesConfigurer -->
	<beans:bean id="tilesviewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" >
		<beans:property name="order" value="1"/>
	</beans:bean>
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>classpath:tiles.xml</beans:value>
			</beans:list>
		</beans:property>	
	</beans:bean>	

	 <!-- MultipartResolver 설정 -->
	 <!-- value값은 서버에서 업로드 할 수 있는 첨부파일 최대 크기 10MB-->

    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <beans:property name="maxUploadSize" value="100000000" />
        <beans:property name="maxInMemorySize" value="100000000" />
    </beans:bean>
	<!-- 파일업로드를 위한 디렉토리 설정 -->
	<!-- String uploadPath = new String("업로드 경로") -->
	<beans:bean id="uploadPath" class="java.lang.String">
		<!-- 파일업로드 디렉토리 -->
		<beans:constructor-arg value="resources/file" />
	</beans:bean>
</beans:beans>
